<?php
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace Google\AdsApi\Common\Util;

use DOMDocument;
use DOMException;

/**
 * A collection of utility methods for working with XML.
 */
class XmlUtils {

  /**
   * Creates a PHP DOMDocument from the specified XML.
   *
   * @param string $xml the XML to create a DOMDocument from
   * @return DOMDocument a DOMDocument from the specified XML
   * @throws DOMException if a DOMDocument could not be created
   */
  public function getDomFromXml($xml) {
    set_error_handler([$this, 'handleLoadXmlWarnings']);
    $dom = new DOMDocument();
    try {
      $dom->loadXML($xml,
          LIBXML_DTDLOAD | LIBXML_DTDATTR | LIBXML_NOENT | LIBXML_XINCLUDE);
    } catch(DOMException $e) {
      restore_error_handler();
      throw $e;
    }
    return $dom;
  }

  /**
   * Converts the specified DOMDocument into a formatted (pretty printed) XML
   * string.
   *
   * @param DOMDocument $dom the DOMDocument to convert
   * @return string a formatted (pretty printed) XML string represenation of the
   *     DOMDocument
   */
  public function getXmlFromDom($dom) {
    $dom->formatOutput = true;
    return trim($dom->saveXml());
  }

  /**
   * Translates warnings generated by DOMDocument::loadXML into a DOMException.
   *
   * @throws DOMException if DOMDocument::loadXML generated an E_WARNING
   * @see http://php.net/manual/en/function.set-error-handler.php#refsect1-function.set-error-handler-parameters
   */
  public function handleLoadXmlWarnings($errno, $errstr) {
    switch ($errno) {
      case E_WARNING:
        if (strpos($errstr, 'DOMDocument::loadXML()') !== false) {
          throw new DOMException($errstr);
        }
      default:
        return false;
    }
  }
}

